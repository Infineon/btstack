<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="group__wiced__bt__mesh__light__hsl__server" kind="group">
    <compoundname>wiced_bt_mesh_light_hsl_server</compoundname>
    <title>Mesh Light HSL Server</title>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__wiced__bt__mesh__light__hsl__server_1gacc82595771fcb00fe4e0398bebcbbbe5" prot="public" static="no">
        <type>void()</type>
        <definition>typedef void() wiced_bt_mesh_light_hsl_server_callback_t(uint8_t element_idx, uint16_t event, void *p_data)</definition>
        <argsstring>(uint8_t element_idx, uint16_t event, void *p_data)</argsstring>
        <name>wiced_bt_mesh_light_hsl_server_callback_t</name>
        <briefdescription>
<para>Light HSL Server callback. </para>
        </briefdescription>
        <detaileddescription>
<para>Light HSL Server callback is executed by the Mesh Models library when the application is required to adjust the amount of light emitted by the device or its color. The application is responsible for setting the hardware (for example, by controlling PWM) to comply with the values requested by the library.</para>
<para>If peer device requested to transition to the new brightness, hue or saturation level over a period of time, the callback will be executed repeatedly. The Mesh Models Library calculates the present levels and submits to the application to setup the hardware.</para>
<para>The p_data parameter points to the <ref refid="structwiced__bt__mesh__light__hsl__status__data__t" kindref="compound">wiced_bt_mesh_light_hsl_status_data_t</ref> structure. Typically the application will only need to use the value of the present lightness, hue and saturation fields which specify the target values that the device shall be set at present time. If the remaining_time field is not zero, the transition to the new target levels is in progress and the Mesh Models Library will execute the callback at least once more before the transition is completed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>element_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Element index of the primary element </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The only event that the application should process is WICED_BT_MESH_LIGHT_HSL_STATUS </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="structwiced__bt__mesh__light__hsl__status__data__t" kindref="compound">wiced_bt_mesh_light_hsl_status_data_t</ref> structure</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/r1/builds/cntsQZEy/0/repo/btstack/apps/libraries/mesh_libs/include/wiced_bt_mesh_models.h" line="4194" column="1" bodyfile="C:/r1/builds/cntsQZEy/0/repo/btstack/apps/libraries/mesh_libs/include/wiced_bt_mesh_models.h" bodystart="4194" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__wiced__bt__mesh__light__hsl__server_1ga3bc33dafd57f3d1f0f907e0234374dc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wiced_bt_mesh_model_light_hsl_server_init</definition>
        <argsstring>(uint8_t lightness_element_idx, wiced_bt_mesh_light_hsl_server_callback_t *p_callback, wiced_bool_t is_provisioned)</argsstring>
        <name>wiced_bt_mesh_model_light_hsl_server_init</name>
        <param>
          <type>uint8_t</type>
          <declname>lightness_element_idx</declname>
        </param>
        <param>
          <type><ref refid="group__wiced__bt__mesh__light__hsl__server_1gacc82595771fcb00fe4e0398bebcbbbe5" kindref="member">wiced_bt_mesh_light_hsl_server_callback_t</ref> *</type>
          <declname>p_callback</declname>
        </param>
        <param>
          <type>wiced_bool_t</type>
          <declname>is_provisioned</declname>
        </param>
        <briefdescription>
<para>Light HSL Server Module initialization. </para>
        </briefdescription>
        <detaileddescription>
<para>A Mesh application which contains Light HSL Server (for example, a dimmable color bulb) should call this function during application initialization passing element index of the primary element. The functionality of the HSL Server is split into three elements, the lightness, the hue and the saturation. The initialization function should use the index of the primary - lightness element. If the application needs to support multiple HSL lights (for example, a light fixture or a chandelier), the function shall be called multiple times, once per each primary element.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lightness_element_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Element index where lightness part of the HSL is located. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Application callback that will be executed to set device hardware to required brightness, hue, saturation values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_provisioned</parametername>
</parameternamelist>
<parameterdescription>
<para>If TRUE, the application is being restarted after being provisioned or after a power loss. If FALSE the model cleans up NVRAM on startup.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WICED_TRUE if initialization was successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/r1/builds/cntsQZEy/0/repo/btstack/apps/libraries/mesh_libs/include/wiced_bt_mesh_models.h" line="4211" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wiced__bt__mesh__light__hsl__server_1ga06d138ec4545f36a901e4ab57e0363a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wiced_bt_mesh_model_light_hsl_server_state_changed</definition>
        <argsstring>(uint8_t element_idx, wiced_bt_mesh_light_hsl_status_data_t *p_data)</argsstring>
        <name>wiced_bt_mesh_model_light_hsl_server_state_changed</name>
        <param>
          <type>uint8_t</type>
          <declname>element_idx</declname>
        </param>
        <param>
          <type><ref refid="structwiced__bt__mesh__light__hsl__status__data__t" kindref="compound">wiced_bt_mesh_light_hsl_status_data_t</ref> *</type>
          <declname>p_data</declname>
        </param>
        <briefdescription>
<para>Light HSL state changed. </para>
        </briefdescription>
        <detaileddescription>
<para>The application shall call the Light HSL state changed function to notify the Mesh Models library when values brightness, hue or saturation are changed internally.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>element_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Element index for the lightness part of the HSL device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="structwiced__bt__mesh__light__hsl__status__data__t" kindref="compound">wiced_bt_mesh_light_hsl_status_data_t</ref> status data</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/r1/builds/cntsQZEy/0/repo/btstack/apps/libraries/mesh_libs/include/wiced_bt_mesh_models.h" line="4223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wiced__bt__mesh__light__hsl__server_1ga19db1c617fb306d53924f58356b8a993" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wiced_bool_t</type>
        <definition>wiced_bool_t wiced_bt_mesh_model_light_hsl_server_message_handler</definition>
        <argsstring>(wiced_bt_mesh_event_t *p_event, uint8_t *p_data, uint16_t data_len)</argsstring>
        <name>wiced_bt_mesh_model_light_hsl_server_message_handler</name>
        <param>
          <type><ref refid="structwiced__bt__mesh__event__t" kindref="compound">wiced_bt_mesh_event_t</ref> *</type>
          <declname>p_event</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>data_len</declname>
        </param>
        <briefdescription>
<para>Light HSL Server Message Handler. </para>
        </briefdescription>
        <detaileddescription>
<para>The Light HSL Server Message Handler is an internal Mesh Models library function and does not need to be implemented or called by the application, unless application wants to replace the library functionality. The Mesh Core library calls this function for each message received. The function shall return WICED_TRUE if the message is destined for this specific model and successfully processed, and returns WICED_FALSE otherwise.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_event</parametername>
</parameternamelist>
<parameterdescription>
<para>Mesh event with information about received message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data portion of the message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data in the message</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WICED_TRUE if the message is for this company ID/Model/Element Index combination, WICED_FALSE otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/r1/builds/cntsQZEy/0/repo/btstack/apps/libraries/mesh_libs/include/wiced_bt_mesh_models.h" line="4238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wiced__bt__mesh__light__hsl__server_1ga2b70faf51861e68075fdb528270c90aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wiced_bool_t</type>
        <definition>wiced_bool_t wiced_bt_mesh_model_light_hsl_setup_server_message_handler</definition>
        <argsstring>(wiced_bt_mesh_event_t *p_event, uint8_t *p_data, uint16_t data_len)</argsstring>
        <name>wiced_bt_mesh_model_light_hsl_setup_server_message_handler</name>
        <param>
          <type><ref refid="structwiced__bt__mesh__event__t" kindref="compound">wiced_bt_mesh_event_t</ref> *</type>
          <declname>p_event</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>data_len</declname>
        </param>
        <briefdescription>
<para>Light HSL Setup Server Message Handler. </para>
        </briefdescription>
        <detaileddescription>
<para>The Light HSL Server Message Handler is an internal Mesh Models library function and does not need to be implemented or called by the application, unless application wants to replace the library functionality. The Mesh Core library calls this function for each message received. The function shall return WICED_TRUE if the message is destined for this specific model and successfully processed, and returns WICED_FALSE otherwise.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_event</parametername>
</parameternamelist>
<parameterdescription>
<para>Mesh event with information about received message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data portion of the message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data in the message</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WICED_TRUE if the message is for this company ID/Model/Element Index combination, WICED_FALSE otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/r1/builds/cntsQZEy/0/repo/btstack/apps/libraries/mesh_libs/include/wiced_bt_mesh_models.h" line="4253" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wiced__bt__mesh__light__hsl__server_1ga2f4c5745d19afdadbf0dcb1486d7e78c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wiced_bool_t</type>
        <definition>wiced_bool_t wiced_bt_mesh_model_light_hsl_hue_server_message_handler</definition>
        <argsstring>(wiced_bt_mesh_event_t *p_event, uint8_t *p_data, uint16_t data_len)</argsstring>
        <name>wiced_bt_mesh_model_light_hsl_hue_server_message_handler</name>
        <param>
          <type><ref refid="structwiced__bt__mesh__event__t" kindref="compound">wiced_bt_mesh_event_t</ref> *</type>
          <declname>p_event</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>data_len</declname>
        </param>
        <briefdescription>
<para>Light HSL Hue Server Message Handler. </para>
        </briefdescription>
        <detaileddescription>
<para>The Light HSL Hue Server Message Handler is an internal Mesh Models library function and does not need to be implemented or called by the application, unless application wants to replace the library functionality. The Mesh Core library calls this function for each message received. The function returns WICED_TRUE if the message is destined for this specific model, and returns WICED_FALSE otherwise.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_event</parametername>
</parameternamelist>
<parameterdescription>
<para>Mesh event with information about received message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data portion of the message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data in the message</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WICED_TRUE if the message is for this company ID/Model/Element Index combination, WICED_FALSE otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/r1/builds/cntsQZEy/0/repo/btstack/apps/libraries/mesh_libs/include/wiced_bt_mesh_models.h" line="4268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wiced__bt__mesh__light__hsl__server_1ga07e19cc3b97dd0c0c2fc8e7f0209aab1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wiced_bool_t</type>
        <definition>wiced_bool_t wiced_bt_mesh_model_light_hsl_saturation_server_message_handler</definition>
        <argsstring>(wiced_bt_mesh_event_t *p_event, uint8_t *p_data, uint16_t data_len)</argsstring>
        <name>wiced_bt_mesh_model_light_hsl_saturation_server_message_handler</name>
        <param>
          <type><ref refid="structwiced__bt__mesh__event__t" kindref="compound">wiced_bt_mesh_event_t</ref> *</type>
          <declname>p_event</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_data</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>data_len</declname>
        </param>
        <briefdescription>
<para>Light HSL Saturation Server Message Handler. </para>
        </briefdescription>
        <detaileddescription>
<para>The Light HSL Saturation Server Message Handler is an internal Mesh Models library function and does not need to be implemented or called by the application, unless application wants to replace the library functionality. The Mesh Core library calls this function for each message received. The function returns WICED_TRUE if the message is destined for this specific model, and returns WICED_FALSE otherwise.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_event</parametername>
</parameternamelist>
<parameterdescription>
<para>Mesh event with information about received message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data portion of the message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the data in the message</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WICED_TRUE if the message is for this company ID/Model/Element Index combination, WICED_FALSE otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/r1/builds/cntsQZEy/0/repo/btstack/apps/libraries/mesh_libs/include/wiced_bt_mesh_models.h" line="4283" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wiced__bt__mesh__light__hsl__server_1ga71257c7ff7e767d04e6e6566aca39153" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t wiced_bt_mesh_model_light_hsl_server_scene_store_handler</definition>
        <argsstring>(uint8_t element_idx, uint8_t *p_buffer, uint16_t buffer_len)</argsstring>
        <name>wiced_bt_mesh_model_light_hsl_server_scene_store_handler</name>
        <param>
          <type>uint8_t</type>
          <declname>element_idx</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_buffer</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>buffer_len</declname>
        </param>
        <briefdescription>
<para>Light HSL Server Scene Store Handler. </para>
        </briefdescription>
        <detaileddescription>
<para>The Light HSL Server Store Handler is an internal Mesh Models library function and does not need to be implemented or called by the application, unless application wants to replace the library functionality. The mesh Scene Server calls this function so that the module can store required data for the scene.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>element_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Element index for which scene information is being stored </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a buffer where data should be stored </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum amount of data a model can store</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bytes the model wrote into the provided buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/r1/builds/cntsQZEy/0/repo/btstack/apps/libraries/mesh_libs/include/wiced_bt_mesh_models.h" line="4297" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wiced__bt__mesh__light__hsl__server_1ga6eeb45f539f1673ed8aee1acc8a62f12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t wiced_bt_mesh_model_light_hsl_server_scene_recall_handler</definition>
        <argsstring>(uint8_t element_idx, uint8_t *p_buffer, uint16_t buffer_len, uint32_t transition_time, uint32_t delay)</argsstring>
        <name>wiced_bt_mesh_model_light_hsl_server_scene_recall_handler</name>
        <param>
          <type>uint8_t</type>
          <declname>element_idx</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>p_buffer</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>buffer_len</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>transition_time</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>delay</declname>
        </param>
        <briefdescription>
<para>Light HSL Server Scene Recall Handler. </para>
        </briefdescription>
        <detaileddescription>
<para>The Light HSL Server Recall Handler is an internal Mesh Models library function and does not need to be implemented or called by the application, unless application wants to replace the library functionality. When Scene Server receives Scene Recall message it calls this function with data previously stored in the NVRAM.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>element_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Element index for which scene information is being recalled </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a buffer where model&apos;s data is located </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum amount of data a model can get from the buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transition_time</parametername>
</parameternamelist>
<parameterdescription>
<para>Specified time in milliseconds to transition to the target state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies time in milliseconds before starting to transition to the target state</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bytes the model read from the provided buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/r1/builds/cntsQZEy/0/repo/btstack/apps/libraries/mesh_libs/include/wiced_bt_mesh_models.h" line="4313" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__wiced__bt__mesh__light__hsl__server_1ga5861bbeb29fa4fb2985d60baab45dbe2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wiced_bt_mesh_model_light_hsl_server_set_startup_controller</definition>
        <argsstring>(uint8_t element_idx, wiced_bool_t startup_controller)</argsstring>
        <name>wiced_bt_mesh_model_light_hsl_server_set_startup_controller</name>
        <param>
          <type>uint8_t</type>
          <declname>element_idx</declname>
        </param>
        <param>
          <type>wiced_bool_t</type>
          <declname>startup_controller</declname>
        </param>
        <briefdescription>
<para>Set Light HSL Model as a startup controller. </para>
        </briefdescription>
        <detaileddescription>
<para>This is an internal Mesh Models library function and does not need to be implemented or called by the application, unless application wants to replace the library functionality. For multi-model applications, for example the ones that support both HSL and CTL controls, only one can be setup as a startup controller. If the controller mode is set, the library will execute the power on requirements, for example it can set the lightness/hue/saturation based on the last state before the power off. If the model is not set as a controller, it will not execute on power up state.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>element_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The element index of the top level model </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startup_controller</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to WICED_TRUE, the model will execute on power up operation</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/r1/builds/cntsQZEy/0/repo/btstack/apps/libraries/mesh_libs/include/wiced_bt_mesh_models.h" line="4328" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__wiced__bt__mesh__light__hsl__server_1gab330cac44df7024819bff2f0d94b72e8" prot="public" static="no">
        <name>WICED_BT_MESH_MODEL_LIGHT_HSL_SERVER</name>
        <initializer>{ MESH_COMPANY_ID_BT_SIG, WICED_BT_MESH_CORE_MODEL_ID_GENERIC_DEFTT_SRV, <ref refid="group__wiced__bt__mesh__default__transition__time__server_1gaadbba5b7363b2afda149d73b56d0959d" kindref="member">wiced_bt_mesh_model_default_transition_time_server_message_handler</ref>, NULL, NULL }, \
    { MESH_COMPANY_ID_BT_SIG, WICED_BT_MESH_CORE_MODEL_ID_SCENE_SRV, <ref refid="group__wiced__bt__mesh__scene__server_1gad02139dbd5de33dbfa4574f1b7524817" kindref="member">wiced_bt_mesh_model_scene_server_message_handler</ref>, NULL, NULL }, \
    { MESH_COMPANY_ID_BT_SIG, WICED_BT_MESH_CORE_MODEL_ID_SCENE_SETUP_SRV, <ref refid="group__wiced__bt__mesh__scene__server_1ga1e69d93cd77b795bd811c1ae913a39e9" kindref="member">wiced_bt_mesh_model_scene_setup_server_message_handler</ref>, NULL, NULL }, \
    { MESH_COMPANY_ID_BT_SIG, WICED_BT_MESH_CORE_MODEL_ID_GENERIC_ONOFF_SRV, <ref refid="group__wiced__bt__mesh__onoff__server_1gae8407b3533ba16b322606715ecc95421" kindref="member">wiced_bt_mesh_model_onoff_server_message_handler</ref>, NULL, NULL }, \
    { MESH_COMPANY_ID_BT_SIG, WICED_BT_MESH_CORE_MODEL_ID_GENERIC_POWER_ONOFF_SRV, <ref refid="group__wiced__bt__mesh__power__onoff__server_1gaff7b2624880843f3d34cdf348db91348" kindref="member">wiced_bt_mesh_model_power_onoff_server_message_handler</ref>, NULL, NULL }, \
    { MESH_COMPANY_ID_BT_SIG, WICED_BT_MESH_CORE_MODEL_ID_GENERIC_POWER_ONOFF_SETUP_SRV, <ref refid="group__wiced__bt__mesh__power__onoff__server_1ga6c4dd5a8835747d24d55e38a1b630bfd" kindref="member">wiced_bt_mesh_model_power_onoff_setup_server_message_handler</ref>, NULL, NULL }, \
    { MESH_COMPANY_ID_BT_SIG, WICED_BT_MESH_CORE_MODEL_ID_GENERIC_LEVEL_SRV, <ref refid="group__wiced__bt__mesh__level__server_1ga54956fe15bf384bcd2cc9da8435c25e2" kindref="member">wiced_bt_mesh_model_level_server_message_handler</ref>, NULL, NULL }, \
    { MESH_COMPANY_ID_BT_SIG, WICED_BT_MESH_CORE_MODEL_ID_LIGHT_LIGHTNESS_SRV, <ref refid="group__wiced__bt__mesh__light__lightness__server_1ga4239007109ce36d64ff99bd73f5e37f0" kindref="member">wiced_bt_mesh_model_light_lightness_server_message_handler</ref>, NULL, NULL }, \
    { MESH_COMPANY_ID_BT_SIG, WICED_BT_MESH_CORE_MODEL_ID_LIGHT_LIGHTNESS_SETUP_SRV,  <ref refid="group__wiced__bt__mesh__light__lightness__server_1ga457be8e99b3df7a5da4c37e2217e7f9f" kindref="member">wiced_bt_mesh_model_light_lightness_setup_server_message_handler</ref>, NULL, NULL }, \
    { MESH_COMPANY_ID_BT_SIG, WICED_BT_MESH_CORE_MODEL_ID_LIGHT_HSL_SRV, <ref refid="group__wiced__bt__mesh__light__hsl__server_1ga19db1c617fb306d53924f58356b8a993" kindref="member">wiced_bt_mesh_model_light_hsl_server_message_handler</ref>, <ref refid="group__wiced__bt__mesh__light__hsl__server_1ga71257c7ff7e767d04e6e6566aca39153" kindref="member">wiced_bt_mesh_model_light_hsl_server_scene_store_handler</ref>, <ref refid="group__wiced__bt__mesh__light__hsl__server_1ga6eeb45f539f1673ed8aee1acc8a62f12" kindref="member">wiced_bt_mesh_model_light_hsl_server_scene_recall_handler</ref> }, \
    { MESH_COMPANY_ID_BT_SIG, WICED_BT_MESH_CORE_MODEL_ID_LIGHT_HSL_SETUP_SRV, <ref refid="group__wiced__bt__mesh__light__hsl__server_1ga2b70faf51861e68075fdb528270c90aa" kindref="member">wiced_bt_mesh_model_light_hsl_setup_server_message_handler</ref>, NULL, NULL }</initializer>
        <briefdescription>
<para>Mesh Light HSL Server device definition. </para>
        </briefdescription>
        <detaileddescription>
<para>The Mesh Light HSL Server device implements all required models for the primary, hue and saturation elements of a color bulb that supports brightness, hue and saturation control. The WICED_BT_MESH_MODEL_LIGHT_HSL_HUE_SERVER and WICED_BT_MESH_MODEL_LIGHT_HSL_SATURATION_SERVER should be defined in the element with the higher index than one with WICED_BT_MESH_MODEL_LIGHT_HSL_SERVER, but before the next primary element of the device. For example, if application supports one HSL and one dimmable light, the consecutive elements should be WICED_BT_MESH_MODEL_LIGHT_HSL_SERVER, WICED_BT_MESH_MODEL_LIGHT_HSL_HUE_SERVER, WICED_BT_MESH_MODEL_LIGHT_HSL_SATURATION_SERVER, WICED_BT_MESH_MODEL_LIGHT_LIGHTNESS_SERVER. The time and scheduler models are optional and can be commented out to reduce memory footprint. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/r1/builds/cntsQZEy/0/repo/btstack/apps/libraries/mesh_libs/include/wiced_bt_mesh_models.h" line="4150" column="10" bodyfile="C:/r1/builds/cntsQZEy/0/repo/btstack/apps/libraries/mesh_libs/include/wiced_bt_mesh_models.h" bodystart="4150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wiced__bt__mesh__light__hsl__server_1ga9886cc05eab91cf96e4b4d542b4aa45c" prot="public" static="no">
        <name>WICED_BT_MESH_MODEL_LIGHT_HSL_HUE_SERVER</name>
        <initializer>{ MESH_COMPANY_ID_BT_SIG, WICED_BT_MESH_CORE_MODEL_ID_GENERIC_LEVEL_SRV, <ref refid="group__wiced__bt__mesh__level__server_1ga54956fe15bf384bcd2cc9da8435c25e2" kindref="member">wiced_bt_mesh_model_level_server_message_handler</ref>, NULL, NULL }, \
    { MESH_COMPANY_ID_BT_SIG, WICED_BT_MESH_CORE_MODEL_ID_LIGHT_HSL_HUE_SRV, <ref refid="group__wiced__bt__mesh__light__hsl__server_1ga2f4c5745d19afdadbf0dcb1486d7e78c" kindref="member">wiced_bt_mesh_model_light_hsl_hue_server_message_handler</ref>, NULL, NULL }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/r1/builds/cntsQZEy/0/repo/btstack/apps/libraries/mesh_libs/include/wiced_bt_mesh_models.h" line="4164" column="9" bodyfile="C:/r1/builds/cntsQZEy/0/repo/btstack/apps/libraries/mesh_libs/include/wiced_bt_mesh_models.h" bodystart="4164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__wiced__bt__mesh__light__hsl__server_1ga12b92e56036983737d58ce8199acdd53" prot="public" static="no">
        <name>WICED_BT_MESH_MODEL_LIGHT_HSL_SATURATION_SERVER</name>
        <initializer>{ MESH_COMPANY_ID_BT_SIG, WICED_BT_MESH_CORE_MODEL_ID_GENERIC_LEVEL_SRV, <ref refid="group__wiced__bt__mesh__level__server_1ga54956fe15bf384bcd2cc9da8435c25e2" kindref="member">wiced_bt_mesh_model_level_server_message_handler</ref>, NULL, NULL }, \
    { MESH_COMPANY_ID_BT_SIG, WICED_BT_MESH_CORE_MODEL_ID_LIGHT_HSL_SATURATION_SRV, <ref refid="group__wiced__bt__mesh__light__hsl__server_1ga07e19cc3b97dd0c0c2fc8e7f0209aab1" kindref="member">wiced_bt_mesh_model_light_hsl_saturation_server_message_handler</ref>, NULL, NULL }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/r1/builds/cntsQZEy/0/repo/btstack/apps/libraries/mesh_libs/include/wiced_bt_mesh_models.h" line="4168" column="9" bodyfile="C:/r1/builds/cntsQZEy/0/repo/btstack/apps/libraries/mesh_libs/include/wiced_bt_mesh_models.h" bodystart="4168" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The AIROC Mesh Hue Saturation Lightness (HSL) Server module provides a way for an application to implement a dimmable light device with hue/saturation support. </para>
    </briefdescription>
    <detaileddescription>
<para>The device can be controlled by a device with rich UI which can control the brightness, hue and saturation, but also the device can be can be controlled using a Level sliders (Generic Level client) applied to the brightness, hue or saturation and by a On/Off switch (Generic On/Off client). The device also supports a default transition time server functionality and the application can specify on power up behavior.</para>
<para>The definition of the HSL Server spans three elements. To include the Mesh Models support for the HSL Server module the application includes the <ref refid="group__wiced__bt__mesh__light__hsl__server_1gab330cac44df7024819bff2f0d94b72e8" kindref="member">WICED_BT_MESH_MODEL_LIGHT_HSL_SERVER</ref>, the WICED_BT_MESH_MODEL_LIGHT_HSL_HUE_SERVER, and the WICED_BT_MESH_MODEL_LIGHT_HSL_SATURATION_SERVER in three consecutive elements in the device definition. If the device supports several lights with HSL Server support, for example, a light fixture or a chandelier with several color lights, the triplet of <ref refid="group__wiced__bt__mesh__light__hsl__server_1gab330cac44df7024819bff2f0d94b72e8" kindref="member">WICED_BT_MESH_MODEL_LIGHT_HSL_SERVER</ref>, WICED_BT_MESH_MODEL_LIGHT_HSL_HUE_SERVER and WICED_BT_MESH_MODEL_LIGHT_HSL_SATURATION_SERVER shall be repeated for each physical device.</para>
<para>In addition to the definition, the application shall initialize the HSL Server module by calling <ref refid="group__wiced__bt__mesh__light__hsl__server_1ga3bc33dafd57f3d1f0f907e0234374dc5" kindref="member">wiced_bt_mesh_model_light_hsl_server_init</ref> function for each primary element where the HSL functionality is required providing the <ref refid="group__wiced__bt__mesh__light__hsl__server_1gacc82595771fcb00fe4e0398bebcbbbe5" kindref="member">wiced_bt_mesh_light_hsl_server_callback_t</ref> callback that will be executed when the brightness level, the hue or the saturation of the device needs to be changed.</para>
<para>If device supports local control, for example, when the brightness of the device can be changed locally, the application should call the wiced_bt_mesh_model_light_hsl_status_changed function so that the library can maintain correct state and send an appropriate status message if it is configured to do so.</para>
<para>Most of the functionality of the Light HSL server device is implemented in the Mesh Models Library. The application only needs to set hardware appropriately on receiving WICED_BT_MESH_LIGHT_HSL_STATUS event. If a client requests to change the brightness or the color to the target values over a period of time, the library will maintain the timer and will periodically call the application with appropriate values.</para>
<para>The default transition time is managed by the Mesh Models library. The application provides factory default in the default_transition_time element of the <ref refid="group__wiced__bt__mesh__core_1ga347805955f2e047fa5a05b5dc6ec939f" kindref="member">wiced_bt_mesh_core_config_t</ref> configuration structure. The default value is used unless overwritten by the default transition time client.</para>
<para>The on power up behavior is managed by the Mesh Models library. The application provides factory default in the onpowerup_state element of the <ref refid="group__wiced__bt__mesh__core_1ga347805955f2e047fa5a05b5dc6ec939f" kindref="member">wiced_bt_mesh_core_config_t</ref> configuration structure. The default value is used unless overwritten by the default transition time client. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
